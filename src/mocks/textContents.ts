const textContents = [
  {
    id: '6589e59fcc5ff27fa297f716',
    title: 'React: Efficient UI Development Framework.',
    jist: 'React: Component-based, efficient, virtual DOM, popular for web development.',
    content:
      "<p><br></p><p><strong>React is a popular JavaScript library for building user interfaces, developed and maintained by Facebook. Launched in 2013, React has gained widespread adoption in web development due to its declarative and efficient approach to building interactive UIs.</strong></p><p><u>One of React's core features is its component-based architecture, allowing developers to create modular and reusable UI elements. </u>Components are self-contained units that manage their state and can be combined to build complex user interfaces. This promotes a clean and organized code structure, making it easier to maintain and scale applications.</p><p><em>React utilizes a virtual DOM (Document Object Model) to optimize rendering performance. </em>Instead of updating the entire DOM when changes occur, React updates only the necessary components, minimizing the impact on the user experience. This makes React particularly well-suited for building dynamic and responsive applications.</p><p>React also embraces a one-way data flow, making it predictable and easy to understand how data changes propagate through a component hierarchy. Additionally, React has a vibrant ecosystem with tools like Redux for state management, React Router for navigation, and Next.js for server-side rendering, enabling developers to build powerful and feature-rich applications. Overall, React continues to be a go-to choice for front-end developers seeking a robust and efficient framework for building modern web applications.</p>",
    author: 'Ashok M',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/react.png',
    verifiedBy: 2,
    tags: ['React', 'Frontend'],
    views: 56,
    likes: 11,
    dislikes: 2,
    comments: [
      {
        id: 1,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Balaji P',
        likes: 2,
        dislikes: 0,
        createdAt: '2023-12-25T20:27:17.427+00:00',
        updatedAt: '2023-12-25T20:27:17.427+00:00',
      },
      {
        id: 2,
        content: 'Good one. Could give detailed info about react hook?',
        commenterName: 'Niranjan V',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:32:01.747+00:00',
        updatedAt: '2023-12-25T20:32:01.747+00:00',
      },
      {
        id: 3,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Aabid Bin',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:46:53.383+00:00',
        updatedAt: '2023-12-25T20:46:53.383+00:00',
      },
    ],
    history: [
      {
        id: 1,
        createdOn: '2023-12-25T20:30:38.358+00:00',
        author: 'Ashok M',
        updatedAt: '2023-12-25T20:30:38.358+00:00',
        updatedBy: 'Balaji P',
        version: 1,
        content: {
          title: 'React latest updates 2023',
          tags: ['React', 'React-Query', 'Frontend'],
          jist: 'It is latest react fetaure 2023',
          content:
            "<ol><li><strong style='color: var(--tw-prose-bold);'>React 18</strong><strong>:</strong> React 18 is an ongoing major version that brings concurrent rendering, automatic batching, and other performance improvements. It introduces new features like the 'startTransition' function, allowing developers to mark certain updates as low priority.</li><li><strong style='color: var(--tw-prose-bold);'>React Server Components</strong>: A new experimental feature that allows developers to build components that can render on the server and be hydrated on the client. This has the potential to improve server-side rendering and enhance performance.</li><li><strong style='color: var(--tw-prose-bold);'>React Hooks</strong><strong>:</strong> While not a new feature in 2022, React Hooks continue to be a significant part of React development, offering a more concise and readable way to manage state and side effects in functional components.</li><li><strong style='color: var(--tw-prose-bold);'>React DevTools Updates</strong><strong>:</strong> The React DevTools extension received updates to better support concurrent mode and provide more insights into the React application's performance and state.</li></ol><p><br></p>",
          thumbnail: 'https://ex9tags-js.s3.amazonaws.com/react.png',
        },
      },
    ],
    createdBy: '6589cd62d27d03073d48cc34',
    updatedBy: null,
    createdAt: '2023-12-25T20:27:11.889+00:00',
    updatedAt: '2023-12-25T20:46:53.386+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589ea1fcc5ff27fa297f717',
    title: 'Angular Framework',
    jist: "Angular: Google's MVC framework for dynamic, modular web applications development.",
    content:
      "<p><strong>Angular is a powerful open-source front-end web application framework developed and maintained by Google. </strong>First released in 2010, Angular has evolved significantly and gained widespread popularity among developers for its robust features and comprehensive tooling. The latest major version is Angular 12 as of my last knowledge update in January 2022.</p><p><em>Angular follows the Model-View-Controller (MVC) architectural pattern, facilitating the development of dynamic and single-page web applications. </em>Its key features include two-way data binding, dependency injection, and a modular architecture through the use of components.</p><p>Angular applications are built using TypeScript, a superset of JavaScript that adds static typing and other features to enhance code quality and maintainability. The framework provides a rich set of directives, services, and modules that simplify common development tasks, such as form handling, routing, and HTTP requests.</p><p><u>Angular's CLI (Command Line Interface) streamlines the development process by automating tasks like project scaffolding, testing, and deployment. </u>Additionally, Angular has a strong ecosystem with a variety of libraries and extensions, contributing to its versatility in building scalable and maintainable web applications. The framework's commitment to regular updates and improvements continues to make it a popular choice for developers working on complex and feature-rich projects.</p>",
    author: 'Prabakar M',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/angular.png',
    verifiedBy: 12,
    tags: ['Angular', 'Frontend'],
    views: 214,
    likes: 34,
    dislikes: 6,
    comments: [
      {
        id: 1,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Aabid Bin',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:47:09.769+00:00',
        updatedAt: '2023-12-25T20:47:09.769+00:00',
      },
      {
        id: 2,
        content: 'Thanks for sharing detail infomation.',
        commenterName: 'Niranjan V',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:47:29.529+00:00',
        updatedAt: '2023-12-25T20:47:29.529+00:00',
      },
    ],
    history: [
      {
        id: 1,
        createdOn: '2023-12-25T20:49:04.232+00:00',
        author: 'Prabakar M',
        updatedAt: '2023-12-25T20:49:04.232+00:00',
        updatedBy: 'Balaji P',
        version: 1,
        content: {
          title: 'Angular 2023',
          tags: ['React', 'React-Query', 'Frontend'],
          jist: 'Latest fetaure of angular 2023',
          content:
            "<h2><span style='background-color: transparent; color: rgb(0, 0, 0);'>Features of Angular</span></h2><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Let us look at some features of Angular.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Cross-Platform</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>With Angular, Make websites that work perfectly on devices like computers and phones. You don't need to start from scratch for each device.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>High Speed &amp; Optimum Performance</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular helps the website to run smoothly and load quickly. It ensures users can use the website without waiting too long.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Angular applications</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular helps to build websites that can do extraordinary things, like showing new information without refreshing the whole page. This makes websites feel more like apps.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>MVC Architecture</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular helps to keep your website's code orderly and easy to understand. It splits the parts that handle data (Model), what users see, and how they interact.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Less Code Framework</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular provides tools to get things done with less typing. You can make your website work well without writing lots of complicated code.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Angular CLI (Command Line Interface)</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular CLI is like a helper assistant that listens to your orders. You can tell it what you want, and it does the difficult work.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>CDK and Angular Material</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular Material is similar to a box of pre-designed furniture for your new house for websites. It provides styles and ready-to-use pieces, making your website look nice and work well.</span></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Virtual Scrolling</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Have you seen how your phone screen moves smoothly when you scroll through a long list? Angular helps your website achieve the same smooth scrolling, so scrolling feels easy and doesn't slow things down.</span></p><p><strong>&nbsp;</strong></p><h3><strong style='background-color: transparent; color: rgb(0, 0, 0);'>Component-Based Architecture</strong></h3><p><span style='background-color: transparent; color: rgb(0, 0, 0);'>Angular Component is the building block of every Angular application.</span></p>",
          thumbnail: 'https://ex9tags-js.s3.amazonaws.com/angular.png',
        },
      },
    ],
    createdBy: '6589ce24d27d03073d48cc38',
    updatedBy: null,
    createdAt: '2023-12-25T20:46:23.936+00:00',
    updatedAt: '2023-12-25T20:49:04.234+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589eba7cc5ff27fa297f718',
    title: 'HTML (Hypertext Markup Language)',
    jist: 'HTML is a fundamental language for structuring and presenting web content.',
    content:
      "<p><strong>HTML, or Hypertext Markup Language, stands as the backbone of the World Wide Web, providing a standardized way to structure and present content on the Internet.</strong> Developed by Tim Berners-Lee in the early 1990s, HTML serves as a markup language that uses tags to define elements within a document. These elements range from headings, paragraphs, and images to links, forms, and multimedia components.</p><p><em><u>The strength of HTML lies in its simplicity and universality. It offers a hierarchical structure that allows web browsers to interpret and render content consistently across various devices. HTML documents consist of a head and body, with the head containing</u></em> metadata and the body housing the visible content.</p><p>Over the years, HTML has undergone several revisions, with HTML5 being the latest major version. HTML5 introduces new semantic elements, such as <span style='color: var(--tw-prose-code);'>&lt;header&gt;</span>, <span style='color: var(--tw-prose-code);'>&lt;nav&gt;</span>, and <span style='color: var(--tw-prose-code);'>&lt;section&gt;</span>, promoting clearer document structure and improved accessibility. It also supports multimedia embedding without the need for plugins, enabling the seamless integration of audio and video.</p><p>HTML is complemented by cascading style sheets (CSS) for styling and JavaScript for dynamic interactivity, forming the trio of core web technologies. Together, these technologies empower developers to create engaging and responsive web experiences. As the internet continues to evolve, HTML remains a foundational language, evolving to meet the demands of modern web development and ensuring the consistent and accessible presentation of information across diverse platforms.</p>",
    author: 'Prabakar M',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/html.png',
    verifiedBy: 12,
    tags: ['Angular', 'Frontend'],
    views: 89,
    likes: 18,
    dislikes: 0,
    comments: [
      {
        id: 1,
        content: 'Good one. Can you add latest feature?',
        commenterName: 'Niranjan V',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:53:52.960+00:00',
        updatedAt: '2023-12-25T20:53:52.960+00:00',
      },
      {
        id: 2,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Sangeetha',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T20:54:25.038+00:00',
        updatedAt: '2023-12-25T20:54:25.038+00:00',
      },
    ],
    history: [
      {
        id: 1,
        createdOn: '2023-12-25T20:56:31.606+00:00',
        author: 'Prabakar M',
        updatedAt: '2023-12-25T20:56:31.606+00:00',
        updatedBy: 'Nandha Krishnan',
        version: 1,
        content: {
          title: 'Html latest feature',
          tags: ['Html', 'web-design', 'Frontend'],
          jist: 'Latest fetaure of HTML 2023',
          content:
            "<p>Some noteworthy features introduced in HTML5 include:</p><ol><li><span style='color: var(--tw-prose-bold);'>Semantic Elements:</span> HTML5 introduced semantic elements like <span style='color: var(--tw-prose-code);'>&lt;header&gt;</span>, <span style='color: var(--tw-prose-code);'>&lt;nav&gt;</span>, <span style='color: var(--tw-prose-code);'>&lt;article&gt;</span>, <span style='color: var(--tw-prose-code);'>&lt;section&gt;</span>, <span style='color: var(--tw-prose-code);'>&lt;footer&gt;</span>, and others, making it easier to structure content and improve accessibility.</li><li><span style='color: var(--tw-prose-bold);'>Audio and Video Elements:</span> Native support for embedding audio and video content without the need for third-party plugins, using <span style='color: var(--tw-prose-code);'>&lt;audio&gt;</span> and <span style='color: var(--tw-prose-code);'>&lt;video&gt;</span> tags.</li><li><span style='color: var(--tw-prose-bold);'>Canvas:</span> The <span style='color: var(--tw-prose-code);'>&lt;canvas&gt;</span> element enables dynamic, scriptable rendering of graphics and images directly within the browser.</li><li><span style='color: var(--tw-prose-bold);'>Web Storage:</span> <span style='color: var(--tw-prose-code);'>localStorage</span> and <span style='color: var(--tw-prose-code);'>sessionStorage</span> provide improved client-side storage options for web applications.</li><li><span style='color: var(--tw-prose-bold);'>Offline Web Applications:</span> HTML5 includes features like the Application Cache and the Service Worker API, allowing web applications to work offline and offer a more reliable user experience.</li><li><span style='color: var(--tw-prose-bold);'>Responsive Images:</span> The <span style='color: var(--tw-prose-code);'>&lt;picture&gt;</span> element and the <span style='color: var(--tw-prose-code);'>srcset</span> attribute allow developers to provide multiple image sources based on different conditions like screen size and resolution.</li></ol><p><br></p>",
          thumbnail: 'https://ex9tags-js.s3.amazonaws.com/html.png',
        },
      },
    ],
    createdBy: '6589ce24d27d03073d48cc38',
    updatedBy: null,
    createdAt: '2023-12-25T20:52:55.370+00:00',
    updatedAt: '2023-12-25T20:56:31.611+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589ee5bcc5ff27fa297f71a',
    title: 'Design Patterns in Software Engineering',
    jist: ' Design patterns: Reusable solutions addressing common software design challenges systematically.',
    content:
      "<p>A design pattern is a general reusable solution to a common problem encountered within a specific context in software design. It is a template or guideline that provides a structured and proven approach to solving design issues and creating flexible and maintainable software systems. Design patterns are not actual code but rather conceptual solutions that can be adapted to various scenarios.</p><p>There are several well-known design patterns categorized into three main groups:</p><ol><li><strong style='color: var(--tw-prose-bold);'>Creational Patterns:</strong> These patterns deal with object creation mechanisms, trying to create objects in a manner suitable to the situation. Examples include the Singleton pattern, Factory Method, and Abstract Factory.</li><li><strong style='color: var(--tw-prose-bold);'>Structural Patterns</strong><span style='color: var(--tw-prose-bold);'>:</span> These patterns focus on composition of classes or objects to form larger structures. Examples include the Adapter pattern, Composite pattern, and Decorator.</li><li><strong style='color: var(--tw-prose-bold);'>Behavioral Patterns</strong><span style='color: var(--tw-prose-bold);'>:</span> These patterns are concerned with the interaction and responsibility of objects. Examples include the Observer pattern, Strategy pattern, and Command pattern.</li></ol><p>For instance, the Singleton pattern ensures that a class has only one instance and provides a global point to that instance, while the Observer pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.</p><p><em><u>Design patterns encourage best practices, code organization, and maintainability, making them valuable tools for software developers aiming to build scalable and efficient systems.</u></em></p>",
    author: 'Niranjan V',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/designpattern.png',
    verifiedBy: 12,
    tags: ['Design-pettern', 'Software engineering'],
    views: 721,
    likes: 78,
    dislikes: 3,
    comments: [
      {
        id: 1,
        content: 'Great One',
        commenterName: 'Nandha krishnan',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:04:53.238+00:00',
        updatedAt: '2023-12-25T21:04:53.238+00:00',
      },
      {
        id: 2,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Aabid Bin',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:05:15.878+00:00',
        updatedAt: '2023-12-25T21:05:15.878+00:00',
      },
    ],
    history: null,
    createdBy: '6589cdfed27d03073d48cc36',
    updatedBy: null,
    createdAt: '2023-12-25T21:04:27.421+00:00',
    updatedAt: '2023-12-25T21:05:15.881+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589ef9acc5ff27fa297f71b',
    title: 'Microservices Architecture',
    jist: 'Microservices: Modular, independent units enabling scalable, flexible, and resilient applications.',
    content:
      "<p>Microservices architecture is a revolutionary approach to software design, transforming the traditional monolithic structure into a distributed system of small, independent services. Each microservice encapsulates a specific business capability, operating autonomously with its own database. The communication between microservices occurs through well-defined APIs, fostering flexibility and modularity.</p><p><strong>This architectural paradigm enables agile development, as individual services can be updated, deployed, and scaled independently. </strong>It promotes a decentralized and collaborative development environment, facilitating teams to work on distinct services concurrently. Microservices also enhance fault isolation; if one service fails, it doesn't necessarily impact the entire application.</p><p>However, managing the complexities of inter-service communication and ensuring data consistency across services are challenges that come with the microservices model. Tools like service discovery, load balancing, and container orchestration systems help address these challenges.</p><p>The benefits of microservices extend beyond scalability and agility. They facilitate continuous integration and delivery, allowing rapid innovation and adaptation to changing business requirements. This architectural style aligns with modern development practices, making it an increasingly popular choice for large-scale and dynamic applications. Despite challenges, the advantages of resilience, flexibility, and independent scalability position microservices as a foundational element in contemporary software engineering.</p>",
    author: 'Sangeetha S',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/microservice.png',
    verifiedBy: 138,
    tags: ['microservices', 'Software engineering'],
    views: 2012,
    likes: 398,
    dislikes: 37,
    comments: [
      {
        id: 1,
        content: 'Great initiative! Keep up the good work.',
        commenterName: 'Aabid Bin',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:09:54.788+00:00',
        updatedAt: '2023-12-25T21:09:54.788+00:00',
      },
      {
        id: 2,
        content: 'Great One',
        commenterName: 'Ashok M',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:10:06.772+00:00',
        updatedAt: '2023-12-25T21:10:06.772+00:00',
      },
      {
        id: 3,
        content: 'Nice. Could you add some more inputs about micro front-end',
        commenterName: 'Nandha Krishnan',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:10:51.252+00:00',
        updatedAt: '2023-12-25T21:10:51.252+00:00',
      },
    ],
    history: null,
    createdBy: '6589ce0cd27d03073d48cc37',
    updatedBy: null,
    createdAt: '2023-12-25T21:09:46.359+00:00',
    updatedAt: '2023-12-25T21:10:51.255+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589f093cc5ff27fa297f71c',
    title: 'Java Programming Language',
    jist: 'Java, a versatile language, excels in portability, security, and widespread usage.',
    content:
      "<p>Java, a powerful and versatile programming language, has maintained its prominence in the software development landscape since its introduction by Sun Microsystems in the mid-1990s. Known for its portability, Java follows the 'Write Once, Run Anywhere' (WORA) principle, allowing developers to create applications that can run on diverse platforms without modification. This portability is achieved through the Java Virtual Machine (JVM), which interprets Java bytecode.</p><p>One of Java's strengths lies in its extensive standard library, providing developers with a wealth of pre-built functionalities. Java's object-oriented nature promotes modularity and code reusability, facilitating the creation of scalable and maintainable applications.</p><p>Java is widely used in web development, enterprise systems, and mobile app development, particularly for Android applications. Its platform independence, automatic memory management through garbage collection, and support for multithreading contribute to its popularity in building robust and efficient software solutions.</p><p>Additionally, Java emphasizes security with features like bytecode verification and a comprehensive set of APIs for cryptography and secure communication. The language's stability, backward compatibility, and strong community support further solidify its status as a go-to choice for developers tackling a diverse range of projects, from small applications to large-scale enterprise systems.</p>",
    author: 'Nandha Krishnan',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/java.png',
    verifiedBy: 138,
    tags: ['java', 'core-java'],
    views: 78,
    likes: 12,
    dislikes: 0,
    comments: [
      {
        id: 1,
        content: 'Nice. Could you add some more inputs about Java 8?',
        commenterName: 'Ashok M',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:14:15.042+00:00',
        updatedAt: '2023-12-25T21:14:15.042+00:00',
      },
      {
        id: 2,
        content: 'Good one',
        commenterName: 'Balaji P',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:14:30.566+00:00',
        updatedAt: '2023-12-25T21:14:30.566+00:00',
      },
    ],
    history: [
      {
        id: 1,
        createdOn: '2023-12-25T21:17:18.957+00:00',
        author: 'Nandha Krishnan',
        updatedAt: '2023-12-25T21:17:18.957+00:00',
        updatedBy: 'Balaji P',
        version: 1,
        content: {
          title: 'Java 8 Features',
          tags: ['java', 'core-java'],
          jist: 'Java 8 introduced lambdas, streams, default methods, and the java.time package, enhancing functionality with modern, expressive, and efficient programming constructs.',
          content:
            "<p><br></p><p><strong>Java 8, released in 2014,</strong> marked a significant milestone in the evolution of the Java programming language, introducing several groundbreaking features that revolutionized the way developers approach coding. One of the most notable additions is lambda expressions, enabling concise syntax for expressing instances of single-method interfaces, often replacing the need for anonymous classes.</p><p><strong>The introduction of the Stream API is another key feature, providing a powerful and functional approach to processing collections of data. Streams allow developers to express complex data manipulations in a declarative style, enhancing code readability and promoting parallelism for improved performance.</strong></p><p>Default methods, a feature of the Java 8 release, allowed developers to add new methods to interfaces without breaking existing implementations. This facilitated better backward compatibility and eased the adoption of new functionalities in existing codebases.</p><p><u>Additionally, Java 8 brought the java.time package, addressing the long-standing challenges of date and time handling in Java. </u>The new API provides a more comprehensive, immutable, and thread-safe alternative to the previous java.util.Date and java.util.Calendar classes.</p><p>Overall, Java 8's features, including lambdas, streams, default methods, and the java.time package, have had a profound impact on Java development, ushering in a more expressive, efficient, and modern era for Java programmers.</p>",
          thumbnail: 'https://ex9tags-js.s3.amazonaws.com/java.png',
        },
      },
    ],
    createdBy: '6589ce4cd27d03073d48cc3a',
    updatedBy: null,
    createdAt: '2023-12-25T21:13:55.733+00:00',
    updatedAt: '2023-12-25T21:17:18.960+00:00',
    active: true,
    deleted: false,
  },
  {
    id: '6589f200cc5ff27fa297f71d',
    title: 'Blockchain Technology',
    jist: 'Blockchain is a decentralized, secure ledger system enabling transparent, tamper-resistant transactions.',
    content:
      "<p>Blockchain technology, originating as the underlying technology for cryptocurrencies like Bitcoin, has emerged as a revolutionary force with applications extending far beyond digital currencies. At its core,<strong> a blockchain is a decentralized and distributed ledger that records transactions across a network of computers in a secure, transparent, and tamper-resistant manner.</strong></p><p>The key innovation lies in its structure. Blocks of data are linked together in a chain, with each block containing a cryptographic hash of the previous block, creating an immutable and chronological sequence. This design ensures the integrity of the entire transaction history, making it resistant to fraud and unauthorized alterations.</p><p>Blockchain's decentralized nature eliminates the need for intermediaries, fostering trust in transactions without relying on central authorities. It finds applications in various industries, including finance, supply chain, healthcare, and more, where secure and transparent record-keeping is crucial.</p><p><strong>Smart contracts, self-executing contracts with coded terms, further enhance blockchain capabilities by automating and enforcing contractual agreements. </strong>Despite its immense potential, challenges such as scalability, regulatory frameworks, and energy consumption are areas of ongoing exploration and development in the blockchain space.</p><p>Blockchain technology continues to evolve, with the promise of transforming how information and value are exchanged, stored, and verified in a wide range of sectors, offering a paradigm shift towards more transparent and efficient systems.</p>",
    author: 'Aabid Bin',
    thumbnail: 'https://ex9tags-js.s3.amazonaws.com/blockchain.png',
    verifiedBy: 138,
    tags: ['Blockchain', 'Software-engineering'],
    views: 56,
    likes: 7,
    dislikes: 1,
    comments: [
      {
        id: 1,
        content: 'Good one',
        commenterName: 'Balaji P',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:20:06.635+00:00',
        updatedAt: '2023-12-25T21:20:06.635+00:00',
      },
      {
        id: 2,
        content: 'Nice. Thanks for sharing inputs',
        commenterName: 'Ashok M',
        likes: 1,
        dislikes: 0,
        createdAt: '2023-12-25T21:20:34.452+00:00',
        updatedAt: '2023-12-25T21:20:34.452+00:00',
      },
    ],
    history: null,
    createdBy: '6589ce35d27d03073d48cc39',
    updatedBy: null,
    createdAt: '2023-12-25T21:20:00.613+00:00',
    updatedAt: '2023-12-25T21:20:34.455+00:00',
    active: true,
    deleted: false,
  },
]
export default textContents
